<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="net.mamoe.yamlkt.decoder.FlowMapTest" tests="9" skipped="0" failures="0" errors="0" timestamp="2023-03-06T00:32:04" hostname="MacBook-Pro.lan" time="0.014">
  <properties/>
  <testcase name="testNestedJson[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.007"/>
  <testcase name="testFlowMap1[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.002"/>
  <testcase name="testFlowMapWithTwoTrailingComma[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.001"/>
  <testcase name="test flow map missing value[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.001"/>
  <testcase name="testFlowMapWithTrailingComma[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.0"/>
  <testcase name="ttt[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.001"/>
  <testcase name="testFlowClassWithTrailingComma[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.0"/>
  <testcase name="testFlowYamlMapWithTwoBeginning[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.0"/>
  <testcase name="testFullJson[jvm]" classname="net.mamoe.yamlkt.decoder.FlowMapTest" time="0.001"/>
  <system-out><![CDATA[YamlMap {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlElement by Yaml Flow Sequence {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
}
}
}
}
}
}
{menu:{header:SVG Viewer,items:[{id:Open},{id:OpenNew,label:Open New},null,{id:ZoomIn,label:Zoom In},{id:ZoomOut,label:Zoom Out},{id:OriginalView,label:Original View},null,{id:Quality},{id:Pause},{id:Mute},null,{id:Find,label:Find...},{id:FindAgain,label:Find Again},{id:Copy},{id:CopyAgain,label:Copy Again},{id:CopySVG,label:Copy SVG},{id:ViewSVG,label:View SVG},{id:ViewSource,label:View Source},{id:SaveAs,label:Save As},null,{id:Help},{id:About,label:About Adobe CVG Viewer...}]}}
net.mamoe.yamlkt.decoder.FlowMapTest.TestData {
name: Bob
}
YamlMap {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
YamlNullableDynamic {
YamlNullableDynamic by Yaml Flow Map {
}
YamlNullableDynamic by Yaml Flow Map {
}
}
}
YamlNullableDynamic {
YamlNullableDynamic by Yaml Flow Map {
}
YamlNullableDynamic by Yaml Flow Map {
}
}
}
{name=Bob}
YamlNullableDynamic {
YamlNullableDynamic by Yaml Block Map indented 0 {
}
YamlNullableDynamic by Yaml Block Map indented 0 {
}
}
}
{123456789=123456789}
net.mamoe.yamlkt.decoder.FlowMapTest.TestData {
name: Bob
}
YamlMap {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
{null:null,name:Bob}
YamlMap {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
YamlElement by Yaml Flow Sequence {
}
YamlElement by Yaml Flow Sequence {
}
}
}
}
}
YamlElement by Yaml Flow Map {
}
YamlElement by Yaml Flow Map {
}
}
}
}
}
}
}
}
}
}
}
{glossary:{title:example glossary,		"GlossDiv":{title:S,			"GlossList":{GlossEntry:{ID:SGML,					"SortAs":SGML,					"GlossTerm":Standard Generalized Markup Language,					"Acronym":SGML,					"Abbrev":ISO 8879:1986,					"GlossDef":{para:A meta-markup language, used to create markup languages such as DocBook.,						"GlossSeeAlso":[GML,XML]},					"GlossSee":markup}}}}}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
