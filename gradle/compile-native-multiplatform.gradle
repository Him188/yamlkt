/*
 * Copyright 2016-2020 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

project.ext.ideaActive = System.getProperty('idea.active') == 'true'

kotlin {
    targets {
        def hostOs = System.getProperty("os.name")

        def linuxEnabled = hostOs == "Mac OS X"
        def macosEnabled = hostOs == "Linux"
        def winEnabled =  hostOs.startsWith("Windows")

        project.ext.isLinuxHost = linuxEnabled
        project.ext.isMacosHost = macosEnabled
        project.ext.isWinHost = winEnabled

        if (project.ext.ideaActive) {
            def ideaPreset = presets.linuxX64
            if (macosEnabled) ideaPreset = presets.macosX64
            if (winEnabled) ideaPreset = presets.mingwX64
            project.ext.ideaPreset = ideaPreset
        }
    }
}

project.ext.nativeMainSets = []
project.ext.nativeTestSets = []

kotlin {
    targets.metaClass.addTarget = { preset ->
        def target = delegate.fromPreset(preset, preset.name)
        project.ext.nativeMainSets.add(target.compilations['main'].kotlinSourceSets.first())
        project.ext.nativeTestSets.add(target.compilations['test'].kotlinSourceSets.first())
    }

    targets {
        if (project.ext.ideaActive) {
            fromPreset(project.ext.ideaPreset, 'native')
        } else {
            addTarget(presets.linuxX64)
            addTarget(presets.mingwX64)

            addTarget(presets.iosArm64)
            addTarget(presets.iosArm32)
            addTarget(presets.iosX64)
            addTarget(presets.iosSimulatorArm64)

            addTarget(presets.macosX64)
            addTarget(presets.macosArm64)

            addTarget(presets.tvosArm64)
            addTarget(presets.tvosX64)
            addTarget(presets.tvosSimulatorArm64)

            addTarget(presets.watchosArm32)
            addTarget(presets.watchosArm64)
            addTarget(presets.watchosX86)
            addTarget(presets.watchosX64)
            addTarget(presets.watchosSimulatorArm64)
        }
    }

    sourceSets {
        nativeMain { dependsOn commonMain }
        // Empty source set is required in order to have native tests task
        nativeTest {}

        if (!project.ext.ideaActive) {
            configure(nativeMainSets) {
                dependsOn nativeMain
            }

            configure(nativeTestSets) {
                dependsOn nativeTest
            }
        }
    }
}
